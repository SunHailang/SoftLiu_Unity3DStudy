using System;
using System.Globalization;

namespace SoftLiu.Utilities
{
    public class TimeUtilities : AutoGeneratedSingleton<TimeUtilities>
    {
        /// <summary>
        /// 生成时间戳 
        /// </summary>
        /// <returns>当前时间减去 1970-01-01 00.00.00 得到的秒数</returns>
        public long GetTimeStamp(DateTime dateTime)
        {
            DateTime startTime = TimeZone.CurrentTimeZone.ToLocalTime(new System.DateTime(1970, 1, 1, 0, 0, 0, 0));
            long stamp = (long)System.Math.Round((dateTime - startTime).TotalSeconds, MidpointRounding.AwayFromZero);
            return stamp;
        }

        /// <summary>  
        /// time span transform to C# date time
        /// </summary>  
        /// <param name="timeStamp">Unix time span</param>  
        /// <returns>date time</returns>  
        public DateTime GetDateTime(string timeStamp)
        {
            DateTime dtStart = TimeZone.CurrentTimeZone.ToLocalTime(new DateTime(1970, 1, 1));
            long lTime = long.Parse(timeStamp + "0000000");
            TimeSpan toNow = new TimeSpan(lTime);
            return dtStart.Add(toNow);
        }

        /// <summary>
        /// get left over seconds
        /// </summary>
        /// <param name="startTime"></param>
        /// <param name="endTime"></param>
        /// <returns></returns>
        public TimeSpan GetLeftoverSecondsByDateTime(DateTime startTime, DateTime endTime)
        {
            return endTime.Subtract(startTime).Duration();
        }
        /// <summary>
        /// left time span  时间戳
        /// </summary>
        /// <param name="startTime"></param>
        /// <param name="endTime"></param>
        /// <returns></returns>
        public TimeSpan GetLeftoverSecondsByStamp(string startTime, string endTime)
        {
            return GetDateTime(endTime).Subtract(GetDateTime(startTime)).Duration();
        }
        /// <summary>
        /// 国际时间 周日 算作一周的第一天，所以周的变化是发生在周日的时候，国内计算每周的第一天是周一 所以取 week of year 需要将时间 -1 天
        /// </summary>
        /// <param name="dateTime"></param>
        /// <returns></returns>
        public int GetWeekOfYear(DateTime dateTime)
        {
            CultureInfo ci = new CultureInfo("zh-CN");
            return ci.Calendar.GetWeekOfYear(dateTime, ci.DateTimeFormat.CalendarWeekRule, ci.DateTimeFormat.FirstDayOfWeek);
        }

    }
}
