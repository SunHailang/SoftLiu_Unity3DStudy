namespace SoftLiu.Utilities
{
    // A Monolithic state keeper class
    public class AutoGeneratedSingleton<T> where T : AutoGeneratedSingleton<T>, new()
    {
        private static T m_instance = null;
        private static object _lock = new object();

        public static T Instance
        {
            get
            {
                lock (_lock)
                {
                    if (m_instance == null)
                    {
                        m_instance = new T();
                    }

                    return m_instance;
                }
            }
        }
    }
}