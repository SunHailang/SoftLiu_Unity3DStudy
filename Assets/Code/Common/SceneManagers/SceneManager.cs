using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using SoftLiu.Utilities;

namespace SoftLiu.SceneManagers
{
    public class SceneManager : AutoGeneratedSingleton<SceneManager>
    {
        private List<SceneAsyncData> m_SceneDataList = new List<SceneAsyncData>();

        public SceneManager()
        {
            m_SceneDataList.Clear();
        }

        ~SceneManager()
        {
            m_SceneDataList.Clear();
        }

        public void OnUpdate()
        {
            if (m_SceneDataList.Count <= 0)
            {
                return;
            }
            for (int i = 0; i < m_SceneDataList.Count; i++)
            {
                if (m_SceneDataList[i].ProcessIfFinished())
                {
                    m_SceneDataList.RemoveAt(i);
                }
            }
        }

        public bool ExistSceneByName(string name)
        {
            //for (int i = 0; i < UnityEngine.SceneManagement.SceneManager.sceneCountInBuildSettings; i++)
            {
                //if (UnityEngine.SceneManagement.SceneManager.GetSceneByBuildIndex(i).name == name)
                {
                    return true;
                }
            }
            //return false;
        }

        public void LoadScene(string name, UnityEngine.SceneManagement.LoadSceneMode mode)
        {
            UnityEngine.SceneManagement.SceneManager.LoadScene(name, mode);
        }

        public bool LoadSceneAsync(string name, System.Action<SceneAsyncData> onComplete, UnityEngine.SceneManagement.LoadSceneMode mode = UnityEngine.SceneManagement.LoadSceneMode.Single)
        {
            try
            {
                if (!ExistSceneByName(name))
                {
                    return false;
                }
                AsyncOperation asyncO = UnityEngine.SceneManagement.SceneManager.LoadSceneAsync(name, mode);
                m_SceneDataList.Add(new SceneAsyncData(name, asyncO, onComplete));
            }
            catch (System.Exception e)
            {
                Debug.LogError("LoadSceneAsync : " + e.Message);
            }
            return false;
        }


    }
}
